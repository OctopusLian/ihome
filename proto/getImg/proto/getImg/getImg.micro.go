// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/getImg/getImg.proto

package go_micro_srv_getImg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for GetImg service

type GetImgService interface {
	MicroGetImg(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type getImgService struct {
	c    client.Client
	name string
}

func NewGetImgService(name string, c client.Client) GetImgService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "go.micro.srv.getImg"
	}
	return &getImgService{
		c:    c,
		name: name,
	}
}

func (c *getImgService) MicroGetImg(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "GetImg.MicroGetImg", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GetImg service

type GetImgHandler interface {
	MicroGetImg(context.Context, *Request, *Response) error
}

func RegisterGetImgHandler(s server.Server, hdlr GetImgHandler, opts ...server.HandlerOption) error {
	type getImg interface {
		MicroGetImg(ctx context.Context, in *Request, out *Response) error
	}
	type GetImg struct {
		getImg
	}
	h := &getImgHandler{hdlr}
	return s.Handle(s.NewHandler(&GetImg{h}, opts...))
}

type getImgHandler struct {
	GetImgHandler
}

func (h *getImgHandler) MicroGetImg(ctx context.Context, in *Request, out *Response) error {
	return h.GetImgHandler.MicroGetImg(ctx, in, out)
}
